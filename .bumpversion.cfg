;https://pypi.org/project/bump2version/

[bumpversion]
current_version = 0.1.3
commit = True
tag = True
tag_name  = "v{new_version}"
message = "Bump version: {current_version} â†’ {new_version}"
;https://stackoverflow.com/questions/65083808/bump2version-to-increment-pre-release-while-removing-post-release-segment
parse = ^
  (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)
  ((?P<release>alpha|beta)(?P<num>\d+))?
serialize =
  {major}.{minor}.{patch}{release}{num}
  {major}.{minor}.{patch}

[bumpversion:part:release]
optional_value = _
values =
  _
  alpha
  beta

[bumpversion:file:pyproject.toml]
search = version = "{current_version}"
replace = version = "{new_version}"

[bumpversion:file:toolcraft/__init__.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[bumpversion:file:tests/__init__.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

; in case if we want to handle document versioning with bumpversion
;[bumpversion:file:website/package.json]
;search = "version": "{current_version}"
;replace = "version": "{new_version}"
