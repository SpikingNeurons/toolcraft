
# Publish package on release branch if it's tagged with 'v*'
name: release & publish

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  release:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # simple echo for tag
  echo-tag:
    runs-on: ubuntu-18.04
    steps:
      - name: The current tag is ${{ github.ref }}
        run: |
          echo ${{ github.ref }}
          echo ${{ startsWith( github.ref, 'refs/tags/v') }}

  # Job for "build"
  release-build:
    if: startsWith( github.ref, 'refs/tags/v')

    # The type of runner that the job will run on
    strategy:
      matrix:
        python-versions: [3.10]
        os: [ ubuntu-22.04, windows-latest ]

    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Show Change Log
      - name: Show change log
        run: |
          ls -l .
          cat CHANGELOG.md

      # Setup Python
      - name: Setup Python ${{ matrix.python-versions }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      # install poetry
      # know more at https://github.com/snok/install-poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.1
        with:
          version: 1.2.0rc1
          virtualenvs-create: true
          virtualenvs-in-project: false
          # virtualenvs-path: ~/my-custom-path  # can use it for caching ... todo: later
          installer-parallel: true

      # Install dependencies
      - name: Install dependencies with test and build dependencies
        run: poetry install --with test --with build

      # Test with PyTest
      - name: Test with PyTest
        run: poetry run pytest

      # Build wheels and source tarball
      - name: Build wheels and source tarball
        run: |
          poetry version
          poetry build
          poetry publish --dry-run --username=__token__ --password=${{ secrets.PYPI_API_TOKEN}}

      # Check wheels and source tarball
      - name: Check wheels and source tarball
        run: poetry run twine check dist/*

      # List files
      - name: List files
        run: |
          cd dist
          ls -l .
          cd ..

      # Upload files
      - name: Upload artifacts ${{ matrix.python-versions }} on OS ${{ matrix.os }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.python-versions }}
          path: ${{ github.workspace }}/dist/*.whl
          retention-days: 1

  # Job for docs
  # todo: figure out how changelog will be part of stable release with same tag
  # todo: not sure how this is done ... but this is the close we have for now
  release-docs:
    if: startsWith( github.ref, 'refs/tags/v')
    needs: [release-build]
    runs-on: ubuntu-18.04
    steps:
      - name: Generate docs
        run: echo Still TODO
      # todo: Add if condition to publish docs only for stable releases
      - name: Publish docs
        run: echo Still TODO

  # Job for deploy
  release-deploy:
    if: startsWith( github.ref, 'refs/tags/v')
    needs: [release-docs]

    strategy:
      matrix:
        python-versions: [3.8, 3.9]
        os: [ ubuntu-18.04, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Download artifacts ${{ matrix.python-versions }} on OS ${{ matrix.os }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.python-versions }}
          path: ${{ github.workspace }}
      - name: List files
        run: |
          ls -l .
      - name: Setup Python ${{ matrix.python-versions }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}
      - name: Install twine
        run: |
          python -m pip install --upgrade pip twine
      - name: Upload using twine
        run: |
          python -m twine upload * -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} --skip-existing

