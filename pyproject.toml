[tool.poetry]
name = "toolcraft"
# In favour of https://github.com/tiangolo/poetry-version-plugin
version = "0"
homepage = "https://github.com/SpikingNeurons/toolcraft"
repository = "https://github.com/SpikingNeurons/toolcraft"
documentation = "https://github.com/SpikingNeurons/toolcraft"
description = "Create tools with ToolCraft."
authors = ["Praveen Kulkarni <praveenneuron@gmail.com>"]
keywords = ["reporting", "gui", "tool", "toolcraft"]
readme = "README.md"
license =  "BSD-3-Clause"
classifiers=[
    'Intended Audience :: Developers',
    'Natural Language :: English',
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    { include = "toolcraft" },
    { include = "tests", format = "sdist" },
]
#include = [
#    { path = "tests", format = "sdist" },
#]
#exclude = [
#    "**/*.pyc",
#    "**/*.pyi",
#]

[tool.poetry-version-plugin]
source = "git-tag"


[tool.poetry.urls]
"Bug Tracker" = "https://github.com/SpikingNeurons/toolcraft/issues"


[tool.poetry.build]
generate-setup-file = false


[tool.poetry.dependencies]
python = ">=3.7.1,<3.11"
typer = "^0.4.0"
tqdm = "^4.62.2"
PyYAML = "^5.4.1"
dearpygui = "^0.8.64"
yaspin = "^2.1.0"
numpy = "^1.21.2"
pandas = "^1.3.2"
pyarrow = "^5.0.0"


#[tool.poetry.group.dev]
#optional = true
#
#[tool.poetry.group.dev.dependencies]
# build
#virtualenv = "^20.7.2"
#pip = "^21.2.4"
# format
#black  = "^21.8b0"
#isort  = "^5.9.3"
#flake8 = "^3.9.2"
#flake8-docstrings = "^1.6.0"
# commit and check
#twine = "^3.4.2"
#toml = "^0.10.2"


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^6.2.5"
pytest-cov = "^2.12.1"
pytest-xdist = "^2.3.0"
invoke = "^1.6.0"


[tool.poetry.group.build]
optional = true

[tool.poetry.group.build.dependencies]
twine = "^3.4.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
#livereload = "^2.6.3"
mkdocs = "^1.2.2"
mkdocs-include-markdown-plugin = "^3.2.3"
mkdocs-material = "^7.2.6"
mkdocstrings = "^0.15.2"
mkdocs-material-extensions = "^1.0.3"
mkdocs-autorefs = "^0.2"


[tool.poetry.scripts]
toolcraft = 'toolcraft.tools:main'


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
profile = "black"
multi_line_output = 3
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
src_paths = ["toolcraft", "tests"]
skip_glob = ["*/setup.py"]
filter_files = true
known_first_party = "poetry"
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
# you can skip files as below
#skip_glob = docs/conf.py
sections=[
    "LOCALFOLDER",
    "PANDAS",
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
]

[tool.yapf]
#recursive = true

[tool.black]
line-length = 81
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | website
  | tests/.*/setup.py
)/
'''

[tool.autopep8]
max_line_length = 120
ignore = "E501,W6"  # or ["E501", "W6"]
recursive = true
aggressive = 3

[tool.flake8]
max-line-length = 81
max-doc-length = 81
max-complexity = 18
ignore = ['E203', 'E266', 'E501', 'W503', 'F403', 'F401', 'D200']
select = ['B', 'C', 'E', 'F', 'W', 'T4', 'B9']
docstring-convention = 'google'
per-file-ignores = '__init__.py:F401'
exclude = '''
    .git,
    __pycache__,
    setup.py,
    build,
    dist,
    releases,
    .idea,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,
    website,
'''


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]


[tool.pytest.ini_options]  # refer: https://docs.pytest.org/en/6.2.x/customize.html
minversion = "6.2"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.tox]  # refer: https://github.com/ymyzk/tox-gh-actions
legacy_tox_ini = """
[tox]
minversion >= 3.20.1
isolated_build = true
envlist = py37, py38, py39, doc

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39, doc

[testenv]
whitelist_externals = poetry
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands =
    poetry install --no-root
    poetry run pytest {posargs} tests/
"""
